generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model inventory {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  item_id    String   @db.Uuid
  quantity   Int
  status     String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  item       item     @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model item {
  id             String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String      @db.VarChar(255)
  category       String      @db.VarChar(255)
  price          Int
  status         String      @db.VarChar(255)
  marketplace_id String      @db.Uuid
  created_at     DateTime    @default(now()) @db.Timestamp(6)
  updated_at     DateTime    @default(now()) @db.Timestamp(6)
  inventory      inventory[]
  marketplace    marketplace @relation(fields: [marketplace_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  order          order[]
  video          video[]
}

model marketplace {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  item        item[]
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model order {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id  String   @db.Uuid
  item_id      String   @db.Uuid
  quantity     Int
  total_price  Int
  order_status String   @db.VarChar(255)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  user         user     @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  item         item     @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  marketplace marketplace[]
  order       order[]
}

model video {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  duration   Int
  item_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  item       item     @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
